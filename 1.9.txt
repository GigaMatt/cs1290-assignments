CTCI 1.9

I: Given a .isSubstring() method and two strings, use the .isSubstring() method only once to check if the strings are rotations of each other.

D: The solution looks like a binary response of whether or not the Strings are rotations of each other.

E: We can accomplish this by altering one of the strings such that it is itself, just repeated. Then we can use the .isSubstring() method to determine if the unaltered String is a substring of the newly altered String.

A:
	Step 1 & 2: I wrote down partial information on a whiteboard to visualize the problem.
	Step 3: A pattern noticed was that since one word could possibly be a substring of another word, if we duplicate a word (have it repeat), then we can compare the other word to it and if it is a rotation, it would appear in the altered word. 

	Step 4, 5, 6: In choosing to alter one of the Strings, it became evident that if one string was a rotation of the other, then that would be evident when comparing the Strings.

L: I was stuck on this problem for about 24 hours, but learned that sometimes the simplest of solutions can often be the best solution for a problem.
